@inject Application.Cart.GetCart getCart
@{
    Layout = "Shared/_Layout";
    var userId = User.GetUserId();
    var cartItems = await getCart.Do(userId, c => c);
    var pageName = ViewContext.RouteData.Values["Page"].ToString()?.Split("/").Last();
    var pageIcon = pageName switch{
        "Delivery" => "M18 18.5C18.83 18.5 19.5 17.83 19.5 17C19.5 16.17 18.83 15.5 18 15.5C17.17 15.5 16.5 16.17 16.5 17C16.5 17.83 17.17 18.5 18 18.5M19.5 9.5H17V12H21.46L19.5 9.5M6 18.5C6.83 18.5 7.5 17.83 7.5 17C7.5 16.17 6.83 15.5 6 15.5C5.17 15.5 4.5 16.17 4.5 17C4.5 17.83 5.17 18.5 6 18.5M20 8L23 12V17H21C21 18.66 19.66 20 18 20C16.34 20 15 18.66 15 17H9C9 18.66 7.66 20 6 20C4.34 20 3 18.66 3 17H1V6C1 4.89 1.89 4 3 4H17V8H20M3 6V15H3.76C4.31 14.39 5.11 14 6 14C6.89 14 7.69 14.39 8.24 15H15V6H3M10 7L13.5 10.5L10 14V11.5H5V9.5H10V7Z",
        "Payment" => "M5,6H23V18H5V6M14,9A3,3 0 0,1 17,12A3,3 0 0,1 14,15A3,3 0 0,1 11,12A3,3 0 0,1 14,9M9,8A2,2 0 0,1 7,10V14A2,2 0 0,1 9,16H19A2,2 0 0,1 21,14V10A2,2 0 0,1 19,8H9M1,10H3V20H19V22H1V10Z",
        _ => throw new ArgumentException(nameof(pageName))
        };
}

@section Styles {
    <style>
        .tab {
            display: none;
        }
        .tab.is-active {
            display: block;
        }
    </style>
    @await RenderSectionAsync("Styles", required: false)
}

<div class="container">
    <div class="flex justify-center">
        <div class="box" style="min-width: 336px;">
            <div class="tabs is-centered">
                <ul>
                    <li class="is-active" id="tab-1">
                        <a onclick="showForm()">
                            <span class="icon is-small">
                                <svg style="width:24px;height:24px" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="@pageIcon"/>
                                </svg>
                            </span>
                            <span>@pageName</span>
                        </a>
                    </li>
                    <li id="tab-2">
                        <a onclick="showCart()">
                            <span class="icon is-small">
                                <svg style="width:24px;height:24px" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M17,18C15.89,18 15,18.89 15,20A2,2 0 0,0 17,22A2,2 0 0,0 19,20C19,18.89 18.1,18 17,18M1,2V4H3L6.6,11.59L5.24,14.04C5.09,14.32 5,14.65 5,15A2,2 0 0,0 7,17H19V15H7.42A0.25,0.25 0 0,1 7.17,14.75C7.17,14.7 7.18,14.66 7.2,14.63L8.1,13H15.55C16.3,13 16.96,12.58 17.3,11.97L20.88,5.5C20.95,5.34 21,5.17 21,5A1,1 0 0,0 20,4H5.21L4.27,2M7,18C5.89,18 5,18.89 5,20A2,2 0 0,0 7,22A2,2 0 0,0 9,20C9,18.89 8.1,18 7,18Z"/>
                                </svg>
                            </span>
                            <span>Cart</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="tab is-active" id="form-tab">
                @RenderBody()
            </div>
            <div class="cart-item-container mx-2 tab" id="cart-tab">
                @foreach (var product in cartItems)
                {
                    <div class="columns mt-4 is-mobile">
                        <div class="column">
                            <figure class="image is-square">
                                <img src="/images/@product.Stock.Product.Images[0].Path" alt="">
                            </figure>
                        </div>
                        <div class="column flex-column py-3">
                            <p class="is-size-4 is-bold">@product.Stock.Product.Name</p>
                            <p class="heading mb-3">@product.Stock.Description</p>
                            <p class="justify-between">
                                <span>Costs:</span> <span class="is-bold">@product.Stock.Value.ToMoney()</span>
                            </p>
                            <p class="justify-between">
                                <span>Qty:</span> <span class="is-bold">@product.Qty</span>
                            </p>
                        </div>
                    </div>
                }
                <div class="flex justify-center">
                    <a asp-page="/Index">Return To Shop</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        var tab1 = document.getElementById('tab-1');
      var tab2 = document.getElementById('tab-2');
      var formTab = document.getElementById('form-tab');
      var cartTab = document.getElementById('cart-tab');

      var showForm = function () {
          if(!formTab.classList.contains('is-active')){
            tab1.classList.add('is-active')
            formTab.classList.add('is-active')
          }
          cartTab.classList.remove('is-active')
          tab2.classList.remove('is-active')
      }

      var showCart = function () {
          if(!cartTab.classList.contains('is-active')){
            tab2.classList.add('is-active')
            cartTab.classList.add('is-active')
          }
          tab1.classList.remove('is-active')
          formTab.classList.remove('is-active')
      }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
}