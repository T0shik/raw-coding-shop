@page
@model RawCoding.Shop.UI.Pages.Checkout.Payment

@{
    ViewData["Title"] = "Payment";
    Layout = "_PaymentLayout";
}

@section Styles
{
    <environment include="Development">
        <link rel="stylesheet" href="~/css/payment.css"/>
    </environment>
    <environment include="Production">
        <link rel="stylesheet" href="~/css/payment.min.css" asp-append-version="true"/>
    </environment>
}

<form method="post" id="payment-form">
    <div id="card-element"><!--Stripe.js injects the Card Element--></div>
    <button class="button flow-color" type="submit">
        <div class="spinner hidden" id="spinner"></div>
        <span id="button-text">Pay</span>
    </button>
    <p class="text-red" id="card-error" role="alert"></p>
</form>

@inject IOptionsMonitor<StripeSettings> stripeSettings

@section Scripts
{
    <script>
        var stripe = Stripe('@stripeSettings.CurrentValue.PublicKey');
        var elements = stripe.elements();
        var style = {
          base: {
            color: "#1B0F1E",
            fontFamily: 'Roboto, sans-serif',
            fontSmoothing: "antialiased",
            fontSize: "16px",
            "::placeholder": {
            }
          },
          invalid: {
            fontFamily: 'Roboto, sans-serif',
            color: "#e43",
          }
        };
        var card = elements.create("card", { style: style });
        card.mount("#card-element");
        card.on("change", function (event) {
          document.querySelector("button").disabled = event.empty;
          document.querySelector("#card-error").textContent = event.error ? event.error.message : "";
        });

        var paymentForm = document.getElementById("payment-form");

        paymentForm.addEventListener("submit", function(event) {
          event.preventDefault();
          payWithCard(stripe, card, "@Model.ClientSecret");
        });

        var payWithCard = function(stripe, card, clientSecret) {
           loading(true);
           stripe.confirmCardPayment(clientSecret, {payment_method: {card: card}})
            .then(function(result) {
              if (result.error) {
                showError(result.error.message);
              } else {
                orderComplete(result.paymentIntent.id);
              }
            });
        };

        var orderComplete = function(paymentIntentId) {
          loading(false);
          var hiddenInput = document.createElement('input');
          hiddenInput.setAttribute('type', 'hidden');
          hiddenInput.setAttribute('name', 'stripeToken');
          hiddenInput.setAttribute('value', paymentIntentId);
          paymentForm.appendChild(hiddenInput);
          paymentForm.submit();
        };

        var showError = function(errorMsgText) {
          loading(false);
          var errorMsg = document.querySelector("#card-error");
          errorMsg.textContent = errorMsgText;
          setTimeout(function() {
            errorMsg.textContent = "";
          }, 4000);
        };

        var loading = function(isLoading) {
          if (isLoading) {
            document.querySelector("button").disabled = true;
            document.querySelector("#spinner").classList.remove("hidden");
            document.querySelector("#button-text").classList.add("hidden");
          } else {
            document.querySelector("button").disabled = false;
            document.querySelector("#spinner").classList.add("hidden");
            document.querySelector("#button-text").classList.remove("hidden");
          }
        };
    </script>
}